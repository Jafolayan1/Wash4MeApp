@using Wash4MeApp.Enums
@model Wash4Me.Models.Order
@{
    ViewData["Title"] = "Create Order";
    Layout = "~/Views/Shared/_SuperAdminLayout.cshtml";
    var viewModel = ViewData["OrderViewModel"] as OrderViewModel;
}
<div class="container-fluid">

    <!-- Page Header -->
    <div class="d-md-flex d-block align-items-center justify-content-between my-4 page-header-breadcrumb">
        <div class="my-auto">
            <h5 class="page-title fs-21 mb-1"> Order</h5>
            <nav>
                <ol class="breadcrumb mb-0">
                    <li class="breadcrumb-item"><a href="javascript:void(0);">Order</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Create Order</li>
                </ol>
            </nav>
        </div>

    </div>
    <!-- Page Header Close -->
    <!-- Start:: row-1 -->
    <div class="row">
        <div class="col-xl-12">
            <div class="card custom-card">
                <div class="card-header justify-content-between">
                    <div class="card-title">
                        Order
                    </div>
                </div>
                <div class="card-body">
                    <div class="container">
                        <div class="row">
                            <div class="col">
                                <select id="item-dropdown" class="form-control">
                                    <option value="">Select Item</option>
                                    @foreach (var item in viewModel.ItemSelectList)
                                    {
                                        <option value="@item.Value" data-item-amount="@viewModel.Items.FirstOrDefault(i => i.ItemId == Convert.ToInt32(item.Value)).ItemAmount">@item.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="col-auto">
                                <button type="button" id="add-item-btn" class="btn btn-secondary">Add Item</button>
                                <button type="button" id="update-btn" class="btn btn-primary">Update</button>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <br /> <hr />
                                <table id="items-table" class="table">
                                    <thead>
                                        <tr>
                                            <th>Item Name</th>
                                            <th>Item Amount</th>
                                            <th>Count</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <!-- Table rows for selected items will be appended here -->
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <br />
                    <form asp-action="Create" method="post">
                        <div class="row gy-4">
                            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                            <div class="col-xl-4 col-lg-6 col-md-6 col-sm-12">
                                <label for="input-text" class="form-label">Order Code</label>
                                <input type="text" asp-for="OrderCode" class="form-control" id="OrderCode" placeholder="" readonly>
                                <span asp-validation-for="OrderCode" class="text-danger"></span>
                            </div>
                            <div class="col-xl-4 col-lg-6 col-md-6 col-sm-12">
                                <label for="AmountPaid" class="form-label">Amount Paid</label>
                                <input type="number" step='0.01' value='0.00' placeholder='0.00' asp-for="AmountPaid" class="form-control" id="AmountPaid" placeholder="">
                                <span asp-validation-for="AmountPaid" class="text-danger"></span>
                            </div>
                            <div class="col-xl-4 col-lg-6 col-md-6 col-sm-12">
                                <label for="AmountToBalance" class="form-label">Amount To Balance</label>
                                <input type="number" step='0.01' value='0.00' placeholder='0.00' asp-for="AmountToBalance" class="form-control" id="AmountToBalance" placeholder="" readonly>
                                <span asp-validation-for="AmountToBalance" class="text-danger"></span>
                            </div>
                            <div class="col-xl-4 col-lg-6 col-md-6 col-sm-12">
                                <label for="input-text" class="form-label">Total Cost</label>
                                <input type="number" step='0.01' value='0.00' placeholder='0.00' asp-for="TotalCost" class="form-control" id="TotalCost" placeholder="" readonly>
                                <span asp-validation-for="TotalCost" class="text-danger"></span>
                            </div>
                            <div class="col-xl-4 col-lg-6 col-md-6 col-sm-12">
                                <label asp-for="DeliveryMethod" class="form-label"></label>
                                <select asp-for="DeliveryMethod" class="form-control">
                                    <option value="">--Select Delivery Method--</option>
                                    @foreach (var method in Enum.GetValues(typeof(DeliveryMethod)))
                                    {
                                        <option value="@method">@method</option>
                                    }
                                </select>
                                <span asp-validation-for="DeliveryMethod" class="text-danger"></span>
                            </div>
                            <div class="col-xl-4 col-lg-6 col-md-6 col-sm-12">
                                @if (ViewBag.ApplicationUserId != null)
                                {
                                    <div class="form-group">
                                        <label asp-for="ApplicationUserId" class="form-label">Customer</label>
                                        <select asp-for="ApplicationUserId" class="form-control" asp-items="ViewBag.ApplicationUserId">
                                            <option>--Select Customer--</option>
                                        </select>
                                    </div>
                                }
                                else
                                {
                                    <select>
                                        <option>
                                            ----------------------
                                        </option>
                                    </select>
                                }
                            </div>
                            <div class="col-xl-4 col-lg-6 col-md-6 col-sm-12">
                                <label for="input-text" class="form-label">Commission</label>
                                <input type="number" step='0.01' value='0.00' placeholder='0.00' name="CommissionAmount" class="form-control" id="CommissionAmount" readonly>
                            </div>
                            <div class="col-xl-4 col-lg-6 col-md-6 col-sm-12">
                                <label for="" class="form-label"></label>
                                <button type="button" class="form-control btn btn-secondary" onclick="calculateCommission()">Calculate Commission</button>
                            </div>
                            <div class="col-xl-4 col-lg-6 col-md-6 col-sm-12">
                                <label for="" class="form-label"></label>
                                <input type="submit" value="Submit" class="form-control btn btn-primary" />
                            </div>

                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>

</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>


@section Scripts {
    <script>
        document.getElementById("add-item-btn").addEventListener("click", function () {
            var dropdown = document.getElementById("item-dropdown");
            var selectedItem = dropdown.options[dropdown.selectedIndex];
            var itemName = selectedItem.textContent;
            var itemId = selectedItem.value;
            var itemAmount = parseFloat(selectedItem.getAttribute("data-item-amount"));

            var newRow = "<tr><td>" + itemName + "</td><td>" + itemAmount.toFixed(2) + "</td><td><input type='number' class='form-control count-input' value='1'></td></tr>";
            document.getElementById("items-table").getElementsByTagName("tbody")[0].insertAdjacentHTML("beforeend", newRow);

            updateTotalCost();
        });

        document.getElementById("update-btn").addEventListener("click", function () {
            updateTotalCost();
        });

        function updateTotalCost() {
            var totalCost = 0;
            var table = document.getElementById("items-table");
            var rows = table.getElementsByTagName("tr");
            for (var i = 1; i < rows.length; i++) {
                var row = rows[i];
                var cells = row.getElementsByTagName("td");
                var itemAmount = parseFloat(cells[1].innerText);
                var count = parseFloat(cells[2].querySelector(".count-input").value);
                totalCost += itemAmount * count;
            }
            document.getElementById("TotalCost").value = totalCost.toFixed(2);
        }

        document.addEventListener("DOMContentLoaded", function () {
            function generateOrderCode() {
                var randomCode = Math.floor(100000 + Math.random() * 900000);
                document.getElementById("OrderCode").value = "#" + randomCode;
            }
            generateOrderCode();
        });

        function calculateCommission() {
            var amountPaid = parseFloat(document.getElementById('AmountPaid').value);
            var totalCost = parseFloat(document.getElementById('TotalCost').value);
            var amountToBalance = parseFloat(document.getElementById('AmountToBalance').value);

            var subtractedAmount = totalCost - amountPaid;
            var updatedAmountToBalance = amountToBalance + subtractedAmount;
            document.getElementById('AmountToBalance').value = updatedAmountToBalance.toFixed(2);

            var commission = totalCost * 0.01;
            document.getElementById('CommissionAmount').value = commission.toFixed(2);
        }

        // Disable Calculate Commission button if AmountPaid is empty
        document.getElementById("AmountPaid").addEventListener("input", function () {
            var amountPaid = parseFloat(this.value);
            var calculateButton = document.getElementById("calculate-commission-btn");
            if (isNaN(amountPaid) || amountPaid <= 0.00) {
                calculateButton.disabled = true;
            } else {
                calculateButton.disabled = false;
            }
        });

    </script>
}


